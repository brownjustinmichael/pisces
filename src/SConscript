import os, inspect
Import ("env")
Import ("include_cuda")
Import ("include_mp")
Import ("log4cxx")

def directory (path, dirname):
    if dirname [len (path) + 1:] == "":
        return ""
    else:
        return dirname [len (path) + 1:] + "/"

conf = Configure (env)

objects = []
cuda_objects = []

if log4cxx:
    if conf.CheckLib ("log4cxx"):
        env.Append (CPPFLAGS = ["-D_LOG4CXX"])
        env.Append (NVCCFLAGS = ["-D_LOG4CXX"])

env = conf.Finish ()

path = os.path.dirname (inspect.getfile (inspect.currentframe ()))

for dirname, dirnames, filenames in os.walk (path):
    for subdirname in dirnames:
        env.SConscript('%s/SConscript' % os.path.join (dirname, subdirname), variant_dir = os.path.join (".", directory (path, dirname) + subdirname), duplicate = 0, exports = {'env': env, "objects": objects, "cuda_objects" : cuda_objects, "include_cuda" : include_cuda, "include_mp": include_mp})

objects.append (env.Object ("config.cpp"))

conf = Configure (env)

conf.CheckLib ("gfortan")

env.Default (env.Program(target = "../run/main", source = (["main.cpp"] + objects)))

env.Default (env.Program(target = "../run/block_test", source = (["block_test.cpp"] + objects)))

if include_cuda:
    env.Default (env.Program(target = "../run/main_cuda", source = (["main_cuda.cpp"] + objects + cuda_objects)))
